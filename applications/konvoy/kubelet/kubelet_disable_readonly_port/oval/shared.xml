<def-group>
  <definition class="compliance" id="kubelet_disable_readonly_port" version="1">
    <metadata>
      <title>Disable the Read-Only Port on the kubelet</title>
      <affected family="unix">
        <platform>multi_platform_konvoy</platform>
      </affected>
      <description>The read-only-port should be disabled.</description>
    </metadata>
    <criteria operator="AND">
      <criterion comment="Runtime configuration is correct" test_ref="test_konvoy_runtime_read_only_port" />
      <criterion comment="read-only-port is disabled" test_ref="test_kubelet_disable_readonly_port" />
    </criteria>
  </definition>

  <ind:textfilecontent54_test check="all" check_existence="any_exist" comment="read-only-port is disabled" id="test_kubelet_disable_readonly_port" version="1">
    <ind:object object_ref="object_kubelet_disable_readonly_port" />
    <ind:state state_ref="state_kubelet_disable_readonly_port" />
  </ind:textfilecontent54_test>

  <ind:textfilecontent54_object id="object_kubelet_disable_readonly_port" version="1">
    <ind:filepath>/var/lib/kubelet/config.yaml</ind:filepath>
    <ind:pattern operation="pattern match">^[\s]*read-only-port\:[\s]*[\n]+[\s]*-[\s]+(\S+)[\s]*$</ind:pattern>
    <ind:instance datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>

  <ind:textfilecontent54_state id="state_kubelet_disable_readonly_port" version="1">
    <ind:subexpression datatype="string" operation="pattern match">^'0'$</ind:subexpression>
  </ind:textfilecontent54_state>
{{{ oval_konvoy_service_runtime_config(command="/usr/bin/kubelet", option="--read-only-port", value="0", option_id="read_only_port") }}}
</def-group>
